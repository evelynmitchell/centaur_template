name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'python/src/**'
      - 'rust/src/**'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build documentation
  build:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-docs-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-docs-

      - name: Install documentation dependencies
        run: |
          pip install mkdocs mkdocs-material mkdocstrings[python]

      - name: Install Python project dependencies
        working-directory: ./python
        run: |
          pip install -e .

      - name: Generate Rust documentation
        working-directory: ./rust
        run: |
          cargo doc --no-deps --document-private-items
          mkdir -p ../site/rust
          cp -r target/doc/* ../site/rust/

      - name: Build MkDocs site
        # Note: --strict is removed for template to allow example code warnings
        # Enable --strict in your project: mkdocs build --strict
        run: mkdocs build

      - name: Copy Rust docs to site
        run: |
          mkdir -p site/rust
          cp -r rust/target/doc/* site/rust/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  # Deploy to GitHub Pages (only on push to main)
  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Link check (runs on PRs)
  link-check:
    name: Check Documentation Links
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install mkdocs mkdocs-material mkdocstrings[python]

      - name: Build docs
        # Note: --strict is removed for template to allow example code warnings
        # Enable --strict in your project: mkdocs build --strict
        run: mkdocs build

      - name: Check links
        uses: lycheeverse/lychee-action@v1
        with:
          args: --verbose --no-progress './site/**/*.html'
          fail: true
